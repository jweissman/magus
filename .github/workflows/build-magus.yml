# This workflow implements a simple build + test verification of the Magus application.
# This workflow will download a prebuilt Ruby and Node version, install dependencies and run tests

name: Build Magus

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  
  test:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup chromedriver
      uses: nanasess/setup-chromedriver@master
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0
        bundler-cache: true

    - name: Install Node
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
    
    - name: yarn cache
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install JavaScript dependencies
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn install

    # - name: Setup PostgreSQL
    #   uses: harmon758/postgresql-action@v1
    #   with:
    #     postgresql version: '11'  # See https://hub.docker.com/_/postgres for available versions
    #     postgresql db: 'magus_test'

    - name: Setup Database
      run: |
        cp config/database.yml.ci config/database.yml
        bundle exec rake db:create
        bundle exec rake db:schema:load
      env:
        RAILS_ENV: test
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres

    - name: Compile assets
      run: RAILS_ENV=test bundle exec rails assets:precompile

    - name: Start chromedriver
      run: |
        export DISPLAY=:99
        chromedriver --url-base=/wd/hub &
        sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional

    - name: Run RSpec
      run: bundle exec rspec --require rails_helper
      env:
        RAILS_ENV: test
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres

  deploy:
    needs: test
    runs-on: macos-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.11.10 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "magus-io" #Must be unique in Heroku
          heroku_email: "jweissman1986@gmail.com"

